(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{497:function(e,a,t){"use strict";t.r(a);var n=t(56),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"treeshaking-技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#treeshaking-技术"}},[e._v("#")]),e._v(" TreeShaking 技术")]),e._v(" "),t("p",[e._v("treeShaking代表在构建时，将JavaScript中"),t("strong",[e._v("未引用")]),e._v("的代码给移除掉。它基于ESModule的语法特性。原因是ESModule是静态的，"),t("strong",[e._v("依赖关系在编译时就确定了")]),e._v("。")]),e._v(" "),t("p",[e._v("初次之外可以通过某些插件实现CSS的treeShaking")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i purgecss-webpack-plugin -D\n")])])]),t("p",[e._v("webpack和rollup的treeShaking的区别")]),e._v(" "),t("p",[e._v("webpack的可能由于使用了babel-loader，导致打包后的代码带有副作用，比如处理类函数，无法完美的DCE(dead code elimination)。但是webpack允许我们声明一个模块有无副作用。")]),e._v(" "),t("ul",[t("li",[e._v("副作用就是代码运行时所产生的：导致io，改变了其他变量的值等。")])]),e._v(" "),t("p",[e._v("rollup支持导出ES模块的包。\n他支持程序流分析能更加正确的判断项目本身的代码是否有副作用。我们只要通过rollup打出两份文件，一份umd版，一份ES模块版，它们的路径分别设为main，module的值。这样就能方便使用者进行tree-shaking。")])])}),[],!1,null,null,null);a.default=s.exports}}]);